import { GraphQLSchema } from 'graphql/type';
import { DatabaseType, ISDL } from 'prisma-datamodel';
/**
 * Computes the internal type representation for a model.
 * @param model The model in SDL as string.
 * @param databaseType: The database type implementation to use.
 * @returns An array of all types present in the model.
 */
export declare function parseInternalTypes(model: string, databaseType: DatabaseType): ISDL;
/**
 * Computes a prisma OpenCRUD schema for a given model.
 * @param model The model in SDL as string.
 * @param databaseType: The database type implementation to use.
 * @returns The OpenCRUD schema as graphql-js schema object for the given model.
 */
export declare function generateCRUDSchema(model: string, databaseType: DatabaseType): GraphQLSchema;
/**
 * Computes a prisma OpenCRUD schema for a given model.
 * @param model The model in SDL as string.
 * @param databaseType: The database type implementation to use.
 * @returns The OpenCRUD schema as prettified string for the given model.
 */
export default function generateCRUDSchemaString(model: string, databaseType?: DatabaseType): string;
